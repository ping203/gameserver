// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gamedef/game_def.proto

/*
Package gamedef is a generated protocol buffer package.

It is generated from these files:
	gamedef/game_def.proto

It has these top-level messages:
	LoginInfo
	Account
	ExtraAccountInfo
	User
	Package
	Item
	General
	Skill
*/
package gamedef

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 用户登录信息
type LoginInfo struct {
	Ip     string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Region string `protobuf:"bytes,2,opt,name=region" json:"region,omitempty"`
}

func (m *LoginInfo) Reset()                    { *m = LoginInfo{} }
func (m *LoginInfo) String() string            { return proto.CompactTextString(m) }
func (*LoginInfo) ProtoMessage()               {}
func (*LoginInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginInfo) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *LoginInfo) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type Account struct {
	Account string `protobuf:"bytes,1,opt,name=Account" json:"Account,omitempty"`
	UserID  uint64 `protobuf:"varint,2,opt,name=userID" json:"userID,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Account) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *Account) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

// 账号额外信息
type ExtraAccountInfo struct {
	AccountType uint32 `protobuf:"varint,1,opt,name=accountType" json:"accountType,omitempty"`
	Channel     uint32 `protobuf:"varint,2,opt,name=channel" json:"channel,omitempty"`
	Platform    uint32 `protobuf:"varint,3,opt,name=platform" json:"platform,omitempty"`
}

func (m *ExtraAccountInfo) Reset()                    { *m = ExtraAccountInfo{} }
func (m *ExtraAccountInfo) String() string            { return proto.CompactTextString(m) }
func (*ExtraAccountInfo) ProtoMessage()               {}
func (*ExtraAccountInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ExtraAccountInfo) GetAccountType() uint32 {
	if m != nil {
		return m.AccountType
	}
	return 0
}

func (m *ExtraAccountInfo) GetChannel() uint32 {
	if m != nil {
		return m.Channel
	}
	return 0
}

func (m *ExtraAccountInfo) GetPlatform() uint32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

// 用户信息
type User struct {
	UserID   uint64 `protobuf:"varint,1,opt,name=userID" json:"userID,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	SexID    uint32 `protobuf:"varint,3,opt,name=sexID" json:"sexID,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *User) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *User) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *User) GetSexID() uint32 {
	if m != nil {
		return m.SexID
	}
	return 0
}

// 背包
type Package struct {
	Items   []*Item    `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	General []*General `protobuf:"bytes,2,rep,name=general" json:"general,omitempty"`
	Fight   []uint32   `protobuf:"varint,3,rep,packed,name=fight" json:"fight,omitempty"`
}

func (m *Package) Reset()                    { *m = Package{} }
func (m *Package) String() string            { return proto.CompactTextString(m) }
func (*Package) ProtoMessage()               {}
func (*Package) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Package) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Package) GetGeneral() []*General {
	if m != nil {
		return m.General
	}
	return nil
}

func (m *Package) GetFight() []uint32 {
	if m != nil {
		return m.Fight
	}
	return nil
}

// 道具
type Item struct {
	ItemID uint32 `protobuf:"varint,1,opt,name=itemID" json:"itemID,omitempty"`
	Num    uint32 `protobuf:"varint,2,opt,name=num" json:"num,omitempty"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Item) GetItemID() uint32 {
	if m != nil {
		return m.ItemID
	}
	return 0
}

func (m *Item) GetNum() uint32 {
	if m != nil {
		return m.Num
	}
	return 0
}

// 武将
type General struct {
	Name          string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ItemID        uint32   `protobuf:"varint,2,opt,name=itemID" json:"itemID,omitempty"`
	IndividualHp  uint32   `protobuf:"varint,3,opt,name=individualHp" json:"individualHp,omitempty"`
	IndividualAtk uint32   `protobuf:"varint,4,opt,name=individualAtk" json:"individualAtk,omitempty"`
	IndividualDef uint32   `protobuf:"varint,5,opt,name=individualDef" json:"individualDef,omitempty"`
	IndividualSp  uint32   `protobuf:"varint,6,opt,name=individualSp" json:"individualSp,omitempty"`
	IndividualSpd uint32   `protobuf:"varint,7,opt,name=individualSpd" json:"individualSpd,omitempty"`
	IndividualSd  uint32   `protobuf:"varint,8,opt,name=individualSd" json:"individualSd,omitempty"`
	StriveHp      uint32   `protobuf:"varint,9,opt,name=striveHp" json:"striveHp,omitempty"`
	StriveAtk     uint32   `protobuf:"varint,10,opt,name=striveAtk" json:"striveAtk,omitempty"`
	StriveDef     uint32   `protobuf:"varint,11,opt,name=striveDef" json:"striveDef,omitempty"`
	StriveSp      uint32   `protobuf:"varint,12,opt,name=striveSp" json:"striveSp,omitempty"`
	StriveSpd     uint32   `protobuf:"varint,13,opt,name=striveSpd" json:"striveSpd,omitempty"`
	StriveSd      uint32   `protobuf:"varint,14,opt,name=striveSd" json:"striveSd,omitempty"`
	Level         uint32   `protobuf:"varint,15,opt,name=level" json:"level,omitempty"`
	Skills        []*Skill `protobuf:"bytes,16,rep,name=skills" json:"skills,omitempty"`
}

func (m *General) Reset()                    { *m = General{} }
func (m *General) String() string            { return proto.CompactTextString(m) }
func (*General) ProtoMessage()               {}
func (*General) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *General) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *General) GetItemID() uint32 {
	if m != nil {
		return m.ItemID
	}
	return 0
}

func (m *General) GetIndividualHp() uint32 {
	if m != nil {
		return m.IndividualHp
	}
	return 0
}

func (m *General) GetIndividualAtk() uint32 {
	if m != nil {
		return m.IndividualAtk
	}
	return 0
}

func (m *General) GetIndividualDef() uint32 {
	if m != nil {
		return m.IndividualDef
	}
	return 0
}

func (m *General) GetIndividualSp() uint32 {
	if m != nil {
		return m.IndividualSp
	}
	return 0
}

func (m *General) GetIndividualSpd() uint32 {
	if m != nil {
		return m.IndividualSpd
	}
	return 0
}

func (m *General) GetIndividualSd() uint32 {
	if m != nil {
		return m.IndividualSd
	}
	return 0
}

func (m *General) GetStriveHp() uint32 {
	if m != nil {
		return m.StriveHp
	}
	return 0
}

func (m *General) GetStriveAtk() uint32 {
	if m != nil {
		return m.StriveAtk
	}
	return 0
}

func (m *General) GetStriveDef() uint32 {
	if m != nil {
		return m.StriveDef
	}
	return 0
}

func (m *General) GetStriveSp() uint32 {
	if m != nil {
		return m.StriveSp
	}
	return 0
}

func (m *General) GetStriveSpd() uint32 {
	if m != nil {
		return m.StriveSpd
	}
	return 0
}

func (m *General) GetStriveSd() uint32 {
	if m != nil {
		return m.StriveSd
	}
	return 0
}

func (m *General) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *General) GetSkills() []*Skill {
	if m != nil {
		return m.Skills
	}
	return nil
}

type Skill struct {
	SkillID uint32 `protobuf:"varint,1,opt,name=skillID" json:"skillID,omitempty"`
}

func (m *Skill) Reset()                    { *m = Skill{} }
func (m *Skill) String() string            { return proto.CompactTextString(m) }
func (*Skill) ProtoMessage()               {}
func (*Skill) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Skill) GetSkillID() uint32 {
	if m != nil {
		return m.SkillID
	}
	return 0
}

func init() {
	proto.RegisterType((*LoginInfo)(nil), "gamedef.LoginInfo")
	proto.RegisterType((*Account)(nil), "gamedef.Account")
	proto.RegisterType((*ExtraAccountInfo)(nil), "gamedef.ExtraAccountInfo")
	proto.RegisterType((*User)(nil), "gamedef.User")
	proto.RegisterType((*Package)(nil), "gamedef.Package")
	proto.RegisterType((*Item)(nil), "gamedef.Item")
	proto.RegisterType((*General)(nil), "gamedef.General")
	proto.RegisterType((*Skill)(nil), "gamedef.Skill")
}

func init() { proto.RegisterFile("gamedef/game_def.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 501 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x54, 0x51, 0x8f, 0xd2, 0x40,
	0x10, 0x0e, 0x14, 0xe8, 0x31, 0x5c, 0x91, 0x6c, 0x0c, 0xd9, 0x18, 0x1f, 0xb0, 0x1a, 0x73, 0xf1,
	0x01, 0x8d, 0xf7, 0xe8, 0xd3, 0x25, 0x18, 0x8f, 0xc4, 0x87, 0x4b, 0xab, 0xcf, 0x66, 0x65, 0xa7,
	0xbd, 0x95, 0x76, 0xbb, 0x69, 0x0b, 0x39, 0x7f, 0xbd, 0x66, 0xb6, 0x4b, 0x69, 0xb9, 0x27, 0xe6,
	0xfb, 0x66, 0xe6, 0x9b, 0xf9, 0xda, 0xa1, 0xb0, 0x4c, 0x45, 0x8e, 0x12, 0x93, 0x8f, 0xf4, 0xfb,
	0x4b, 0x62, 0xb2, 0x36, 0x65, 0x51, 0x17, 0xcc, 0x77, 0x7c, 0x78, 0x0b, 0xd3, 0xef, 0x45, 0xaa,
	0xf4, 0x56, 0x27, 0x05, 0x9b, 0xc3, 0x50, 0x19, 0x3e, 0x58, 0x0d, 0x6e, 0xa6, 0xd1, 0x50, 0x19,
	0xb6, 0x84, 0x49, 0x89, 0xa9, 0x2a, 0x34, 0x1f, 0x5a, 0xce, 0xa1, 0xf0, 0x0b, 0xf8, 0x77, 0xbb,
	0x5d, 0x71, 0xd0, 0x35, 0xe3, 0x6d, 0xe8, 0xfa, 0xda, 0xcc, 0x12, 0x26, 0x87, 0x0a, 0xcb, 0xed,
	0xc6, 0x36, 0x8f, 0x22, 0x87, 0xc2, 0x3f, 0xb0, 0xf8, 0xfa, 0x54, 0x97, 0xc2, 0xd5, 0xd9, 0xc1,
	0x2b, 0x98, 0x89, 0x06, 0xfe, 0xf8, 0x6b, 0xd0, 0x2a, 0x05, 0x51, 0x97, 0xa2, 0x39, 0xbb, 0x47,
	0xa1, 0x35, 0x66, 0x56, 0x2e, 0x88, 0x4e, 0x90, 0xbd, 0x82, 0x2b, 0x93, 0x89, 0x3a, 0x29, 0xca,
	0x9c, 0x7b, 0x36, 0xd5, 0xe2, 0xf0, 0x01, 0x46, 0x3f, 0x2b, 0x2c, 0x3b, 0xbb, 0x0c, 0xba, 0xbb,
	0x50, 0xaf, 0x56, 0xbb, 0xbd, 0x16, 0x39, 0x3a, 0x8b, 0x2d, 0x66, 0x2f, 0x61, 0x5c, 0xe1, 0xd3,
	0x76, 0xe3, 0x44, 0x1b, 0x10, 0x1a, 0xf0, 0x1f, 0xc4, 0x6e, 0x2f, 0x52, 0x64, 0x6f, 0x61, 0xac,
	0x6a, 0xcc, 0x2b, 0x3e, 0x58, 0x79, 0x37, 0xb3, 0xcf, 0xc1, 0xda, 0x3d, 0xd3, 0xf5, 0xb6, 0xc6,
	0x3c, 0x6a, 0x72, 0xec, 0x03, 0xf8, 0x29, 0x6a, 0x2c, 0x05, 0xed, 0x4d, 0x65, 0x8b, 0xb6, 0xec,
	0x5b, 0xc3, 0x47, 0xa7, 0x02, 0x9a, 0x98, 0xa8, 0xf4, 0xb1, 0xe6, 0xde, 0xca, 0xa3, 0x89, 0x16,
	0x84, 0x9f, 0x60, 0x44, 0x82, 0xe4, 0x81, 0x24, 0x9d, 0x87, 0x20, 0x72, 0x88, 0x2d, 0xc0, 0xd3,
	0x87, 0xdc, 0x3d, 0x15, 0x0a, 0xc3, 0x7f, 0x1e, 0xf8, 0x4e, 0x9c, 0x31, 0x18, 0x59, 0x77, 0xcd,
	0xcb, 0xb1, 0x71, 0x47, 0x69, 0xd8, 0x53, 0x0a, 0xe1, 0x5a, 0x69, 0xa9, 0x8e, 0x4a, 0x1e, 0x44,
	0x76, 0x6f, 0x9c, 0xf1, 0x1e, 0xc7, 0xde, 0x41, 0x70, 0xc6, 0x77, 0xf5, 0x9e, 0x8f, 0x6c, 0x51,
	0x9f, 0xec, 0x57, 0x6d, 0x30, 0xe1, 0xe3, 0xcb, 0xaa, 0x0d, 0x26, 0xfd, 0x79, 0xb1, 0xe1, 0x93,
	0xcb, 0x79, 0xf1, 0xc5, 0xbc, 0xd8, 0x48, 0xee, 0x5f, 0x2a, 0xc5, 0x46, 0x5e, 0x28, 0x49, 0x7e,
	0xf5, 0x4c, 0x49, 0xd2, 0xbb, 0xae, 0xea, 0x52, 0x1d, 0xf1, 0xde, 0xf0, 0x69, 0x73, 0x27, 0x27,
	0xcc, 0x5e, 0xc3, 0xb4, 0x89, 0xc9, 0x11, 0xd8, 0xe4, 0x99, 0x38, 0x67, 0xc9, 0xc9, 0xac, 0x9b,
	0x25, 0x17, 0xad, 0x6e, 0x6c, 0xf8, 0x75, 0x57, 0x37, 0xee, 0xe8, 0xd2, 0xe6, 0x41, 0xb7, 0x93,
	0xb6, 0x3e, 0x77, 0x4a, 0x3e, 0xef, 0x75, 0x4a, 0xba, 0x85, 0x0c, 0x8f, 0x98, 0xf1, 0x17, 0xcd,
	0xf5, 0x59, 0xc0, 0xde, 0xc3, 0xa4, 0xda, 0xab, 0x2c, 0xab, 0xf8, 0xc2, 0x1e, 0xd3, 0xbc, 0x3d,
	0xa6, 0x98, 0xe8, 0xc8, 0x65, 0xc3, 0x37, 0x30, 0xb6, 0x04, 0xfd, 0x6d, 0x2c, 0xd5, 0x5e, 0xcd,
	0x09, 0xfe, 0x9e, 0xd8, 0x0f, 0xc1, 0xed, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x07, 0x05, 0x77,
	0x0b, 0x22, 0x04, 0x00, 0x00,
}
