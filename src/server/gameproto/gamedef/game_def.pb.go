// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gamedef/game_def.proto

/*
Package gamedef is a generated protocol buffer package.

It is generated from these files:
	gamedef/game_def.proto

It has these top-level messages:
	LoginInfo
	Account
	ExtraAccountInfo
	User
	Individual
	General
	Item
	UserData
	Buff
	Chess
*/
package gamedef

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import gameconf "github.com/wenxiu2199/gameserver/src/server/gameproto/gameconf"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ChessTyp int32

const (
	ChessTyp_CTInvalid ChessTyp = 0
	ChessTyp_CTBlank   ChessTyp = 1
	ChessTyp_CTMine    ChessTyp = 2
)

var ChessTyp_name = map[int32]string{
	0: "CTInvalid",
	1: "CTBlank",
	2: "CTMine",
}
var ChessTyp_value = map[string]int32{
	"CTInvalid": 0,
	"CTBlank":   1,
	"CTMine":    2,
}

func (x ChessTyp) String() string {
	return proto.EnumName(ChessTyp_name, int32(x))
}
func (ChessTyp) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 用户登录信息
type LoginInfo struct {
	Ip     string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Region string `protobuf:"bytes,2,opt,name=region" json:"region,omitempty"`
}

func (m *LoginInfo) Reset()                    { *m = LoginInfo{} }
func (m *LoginInfo) String() string            { return proto.CompactTextString(m) }
func (*LoginInfo) ProtoMessage()               {}
func (*LoginInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginInfo) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *LoginInfo) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type Account struct {
	Account string `protobuf:"bytes,1,opt,name=Account" json:"Account,omitempty"`
	UserID  uint64 `protobuf:"varint,2,opt,name=userID" json:"userID,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Account) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *Account) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

// 账号额外信息
type ExtraAccountInfo struct {
	AccountType uint32 `protobuf:"varint,1,opt,name=accountType" json:"accountType,omitempty"`
	Channel     uint32 `protobuf:"varint,2,opt,name=channel" json:"channel,omitempty"`
	Platform    uint32 `protobuf:"varint,3,opt,name=platform" json:"platform,omitempty"`
	Ip          string `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
	Account     string `protobuf:"bytes,5,opt,name=account" json:"account,omitempty"`
}

func (m *ExtraAccountInfo) Reset()                    { *m = ExtraAccountInfo{} }
func (m *ExtraAccountInfo) String() string            { return proto.CompactTextString(m) }
func (*ExtraAccountInfo) ProtoMessage()               {}
func (*ExtraAccountInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ExtraAccountInfo) GetAccountType() uint32 {
	if m != nil {
		return m.AccountType
	}
	return 0
}

func (m *ExtraAccountInfo) GetChannel() uint32 {
	if m != nil {
		return m.Channel
	}
	return 0
}

func (m *ExtraAccountInfo) GetPlatform() uint32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *ExtraAccountInfo) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ExtraAccountInfo) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

// 用户信息
type User struct {
	UserID   uint64 `protobuf:"varint,1,opt,name=userID" json:"userID,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	SexID    uint32 `protobuf:"varint,3,opt,name=sexID" json:"sexID,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *User) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *User) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *User) GetSexID() uint32 {
	if m != nil {
		return m.SexID
	}
	return 0
}

type Individual struct {
	Hp        int32 `protobuf:"varint,1,opt,name=hp" json:"hp,omitempty"`
	Attack    int32 `protobuf:"varint,2,opt,name=attack" json:"attack,omitempty"`
	Defense   int32 `protobuf:"varint,3,opt,name=defense" json:"defense,omitempty"`
	SpAttack  int32 `protobuf:"varint,4,opt,name=spAttack" json:"spAttack,omitempty"`
	SpDefense int32 `protobuf:"varint,5,opt,name=spDefense" json:"spDefense,omitempty"`
	Speed     int32 `protobuf:"varint,6,opt,name=speed" json:"speed,omitempty"`
}

func (m *Individual) Reset()                    { *m = Individual{} }
func (m *Individual) String() string            { return proto.CompactTextString(m) }
func (*Individual) ProtoMessage()               {}
func (*Individual) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Individual) GetHp() int32 {
	if m != nil {
		return m.Hp
	}
	return 0
}

func (m *Individual) GetAttack() int32 {
	if m != nil {
		return m.Attack
	}
	return 0
}

func (m *Individual) GetDefense() int32 {
	if m != nil {
		return m.Defense
	}
	return 0
}

func (m *Individual) GetSpAttack() int32 {
	if m != nil {
		return m.SpAttack
	}
	return 0
}

func (m *Individual) GetSpDefense() int32 {
	if m != nil {
		return m.SpDefense
	}
	return 0
}

func (m *Individual) GetSpeed() int32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

// 武将信息
type General struct {
	PkID       uint64      `protobuf:"varint,1,opt,name=pkID" json:"pkID,omitempty"`
	GeneralID  uint32      `protobuf:"varint,2,opt,name=generalID" json:"generalID,omitempty"`
	Individual *Individual `protobuf:"bytes,3,opt,name=individual" json:"individual,omitempty"`
	Effort     *Individual `protobuf:"bytes,4,opt,name=effort" json:"effort,omitempty"`
	Skills     uint32      `protobuf:"varint,5,opt,name=skills" json:"skills,omitempty"`
	Level      uint32      `protobuf:"varint,6,opt,name=level" json:"level,omitempty"`
}

func (m *General) Reset()                    { *m = General{} }
func (m *General) String() string            { return proto.CompactTextString(m) }
func (*General) ProtoMessage()               {}
func (*General) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *General) GetPkID() uint64 {
	if m != nil {
		return m.PkID
	}
	return 0
}

func (m *General) GetGeneralID() uint32 {
	if m != nil {
		return m.GeneralID
	}
	return 0
}

func (m *General) GetIndividual() *Individual {
	if m != nil {
		return m.Individual
	}
	return nil
}

func (m *General) GetEffort() *Individual {
	if m != nil {
		return m.Effort
	}
	return nil
}

func (m *General) GetSkills() uint32 {
	if m != nil {
		return m.Skills
	}
	return 0
}

func (m *General) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type Item struct {
	PkID   uint64 `protobuf:"varint,1,opt,name=pkID" json:"pkID,omitempty"`
	ItemID uint32 `protobuf:"varint,2,opt,name=itemID" json:"itemID,omitempty"`
	Num    uint32 `protobuf:"varint,3,opt,name=num" json:"num,omitempty"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Item) GetPkID() uint64 {
	if m != nil {
		return m.PkID
	}
	return 0
}

func (m *Item) GetItemID() uint32 {
	if m != nil {
		return m.ItemID
	}
	return 0
}

func (m *Item) GetNum() uint32 {
	if m != nil {
		return m.Num
	}
	return 0
}

type UserData struct {
	User     *User      `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Generals []*General `protobuf:"bytes,2,rep,name=generals" json:"generals,omitempty"`
	Items    []*Item    `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
}

func (m *UserData) Reset()                    { *m = UserData{} }
func (m *UserData) String() string            { return proto.CompactTextString(m) }
func (*UserData) ProtoMessage()               {}
func (*UserData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UserData) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserData) GetGenerals() []*General {
	if m != nil {
		return m.Generals
	}
	return nil
}

func (m *UserData) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

// ===============Game数据====================
type Buff struct {
	BuffType gameconf.SkillEffectTyp `protobuf:"varint,1,opt,name=buffType,enum=gameconf.SkillEffectTyp" json:"buffType,omitempty"`
	Last     uint32                  `protobuf:"varint,2,opt,name=last" json:"last,omitempty"`
}

func (m *Buff) Reset()                    { *m = Buff{} }
func (m *Buff) String() string            { return proto.CompactTextString(m) }
func (*Buff) ProtoMessage()               {}
func (*Buff) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Buff) GetBuffType() gameconf.SkillEffectTyp {
	if m != nil {
		return m.BuffType
	}
	return gameconf.SkillEffectTyp_SETInvliad
}

func (m *Buff) GetLast() uint32 {
	if m != nil {
		return m.Last
	}
	return 0
}

type Chess struct {
	ChessType ChessTyp `protobuf:"varint,1,opt,name=chessType,enum=gamedef.ChessTyp" json:"chessType,omitempty"`
	Visible   bool     `protobuf:"varint,2,opt,name=visible" json:"visible,omitempty"`
	MineNum   uint32   `protobuf:"varint,3,opt,name=mineNum" json:"mineNum,omitempty"`
}

func (m *Chess) Reset()                    { *m = Chess{} }
func (m *Chess) String() string            { return proto.CompactTextString(m) }
func (*Chess) ProtoMessage()               {}
func (*Chess) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Chess) GetChessType() ChessTyp {
	if m != nil {
		return m.ChessType
	}
	return ChessTyp_CTInvalid
}

func (m *Chess) GetVisible() bool {
	if m != nil {
		return m.Visible
	}
	return false
}

func (m *Chess) GetMineNum() uint32 {
	if m != nil {
		return m.MineNum
	}
	return 0
}

func init() {
	proto.RegisterType((*LoginInfo)(nil), "gamedef.LoginInfo")
	proto.RegisterType((*Account)(nil), "gamedef.Account")
	proto.RegisterType((*ExtraAccountInfo)(nil), "gamedef.ExtraAccountInfo")
	proto.RegisterType((*User)(nil), "gamedef.User")
	proto.RegisterType((*Individual)(nil), "gamedef.Individual")
	proto.RegisterType((*General)(nil), "gamedef.General")
	proto.RegisterType((*Item)(nil), "gamedef.Item")
	proto.RegisterType((*UserData)(nil), "gamedef.UserData")
	proto.RegisterType((*Buff)(nil), "gamedef.Buff")
	proto.RegisterType((*Chess)(nil), "gamedef.Chess")
	proto.RegisterEnum("gamedef.ChessTyp", ChessTyp_name, ChessTyp_value)
}

func init() { proto.RegisterFile("gamedef/game_def.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 656 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x25, 0x6d, 0x93, 0xb6, 0x53, 0x65, 0x55, 0x0c, 0xaa, 0xa2, 0x15, 0x87, 0x25, 0x5c, 0x56,
	0x80, 0x5a, 0xd1, 0xe5, 0xb2, 0xe2, 0xb4, 0xdb, 0xae, 0x50, 0x25, 0x58, 0x21, 0x53, 0xce, 0xc8,
	0x4d, 0x26, 0xad, 0xd5, 0xc4, 0x89, 0xe2, 0xa4, 0xec, 0xde, 0xf8, 0x08, 0xce, 0xfc, 0x10, 0x3f,
	0x85, 0xec, 0x38, 0x6e, 0x0f, 0x70, 0xea, 0x3c, 0xcf, 0xcc, 0xf3, 0x7b, 0x93, 0x71, 0x61, 0xb2,
	0x65, 0x19, 0xc6, 0x98, 0xcc, 0xd4, 0xef, 0xf7, 0x18, 0x93, 0x69, 0x51, 0xe6, 0x55, 0x4e, 0xfa,
	0xe6, 0xfc, 0xfc, 0x7e, 0xcb, 0xab, 0x5d, 0xbd, 0x99, 0x46, 0x79, 0x36, 0xfb, 0x81, 0xe2, 0x81,
	0xd7, 0xf3, 0x77, 0xd7, 0xd7, 0xba, 0x5c, 0x62, 0x79, 0xc0, 0x72, 0x26, 0xcb, 0x68, 0x66, 0x42,
	0x75, 0xaa, 0xfb, 0x75, 0x14, 0xe5, 0xc2, 0xf0, 0x56, 0x8f, 0x05, 0x36, 0xc4, 0xe1, 0x15, 0x0c,
	0x3f, 0xe5, 0x5b, 0x2e, 0x56, 0x22, 0xc9, 0xc9, 0x19, 0x74, 0x78, 0x11, 0x38, 0x17, 0xce, 0xe5,
	0x90, 0x76, 0x78, 0x41, 0x26, 0xe0, 0x95, 0xb8, 0xe5, 0xb9, 0x08, 0x3a, 0xfa, 0xcc, 0xa0, 0xf0,
	0x03, 0xf4, 0x6f, 0xa2, 0x28, 0xaf, 0x45, 0x45, 0x02, 0x1b, 0x9a, 0x3e, 0x9b, 0x99, 0x80, 0x57,
	0x4b, 0x2c, 0x57, 0x4b, 0xdd, 0xdc, 0xa3, 0x06, 0x85, 0xbf, 0x1c, 0x18, 0xdf, 0x3d, 0x54, 0x25,
	0x33, 0x85, 0xfa, 0xe6, 0x0b, 0x18, 0xb1, 0x06, 0xae, 0x1f, 0x0b, 0xd4, 0x54, 0x3e, 0x3d, 0x3d,
	0x52, 0x17, 0x45, 0x3b, 0x26, 0x04, 0xa6, 0x9a, 0xcf, 0xa7, 0x2d, 0x24, 0xe7, 0x30, 0x28, 0x52,
	0x56, 0x25, 0x79, 0x99, 0x05, 0x5d, 0x9d, 0xb2, 0xd8, 0x38, 0xea, 0x59, 0x47, 0x01, 0xf4, 0x0d,
	0x69, 0xe0, 0x36, 0x72, 0x0d, 0x0c, 0xbf, 0x40, 0xef, 0x9b, 0xc4, 0xf2, 0x44, 0xb6, 0x73, 0x2a,
	0x5b, 0xdd, 0x22, 0x78, 0xb4, 0x17, 0x2c, 0x43, 0x33, 0x0d, 0x8b, 0xc9, 0x73, 0x70, 0x25, 0x3e,
	0xac, 0x96, 0xe6, 0xfa, 0x06, 0x84, 0xbf, 0x1d, 0x80, 0x95, 0x88, 0xf9, 0x81, 0xc7, 0x35, 0x4b,
	0x95, 0x94, 0x5d, 0x33, 0x5c, 0x97, 0x76, 0x76, 0x7a, 0xb8, 0xac, 0xaa, 0x58, 0xb4, 0xd7, 0x74,
	0x2e, 0x35, 0x48, 0x49, 0x8c, 0x31, 0x41, 0x21, 0x51, 0xd3, 0xb9, 0xb4, 0x85, 0x4a, 0x82, 0x2c,
	0x6e, 0x9a, 0x9e, 0x9e, 0x4e, 0x59, 0x4c, 0x5e, 0xc0, 0x50, 0x16, 0x4b, 0xd3, 0xe7, 0xea, 0xe4,
	0xf1, 0x40, 0x0b, 0x2c, 0x10, 0xe3, 0xc0, 0xd3, 0x99, 0x06, 0x84, 0x7f, 0x1c, 0xe8, 0x7f, 0x44,
	0x81, 0x25, 0x4b, 0x09, 0x81, 0x5e, 0xb1, 0xb7, 0xa6, 0x75, 0xac, 0x38, 0xb7, 0x4d, 0xda, 0x7c,
	0x44, 0x9f, 0x1e, 0x0f, 0xc8, 0x15, 0x00, 0xb7, 0xee, 0xb4, 0xd4, 0xd1, 0xfc, 0xd9, 0xd4, 0xec,
	0xe9, 0xf4, 0x68, 0x9c, 0x9e, 0x94, 0x91, 0x37, 0xe0, 0x61, 0x92, 0xe4, 0x65, 0xa5, 0x0d, 0xfc,
	0xa7, 0xc1, 0x94, 0xa8, 0x09, 0xc9, 0x3d, 0x4f, 0x53, 0xa9, 0x0d, 0xf9, 0xd4, 0x20, 0xe5, 0x26,
	0xc5, 0x03, 0xa6, 0xda, 0x8d, 0x4f, 0x1b, 0x10, 0x2e, 0xa1, 0xb7, 0xaa, 0x30, 0xfb, 0xa7, 0x93,
	0x09, 0x78, 0xbc, 0xc2, 0xcc, 0xda, 0x30, 0x88, 0x8c, 0xa1, 0x2b, 0xea, 0x76, 0x6b, 0x54, 0x18,
	0xfe, 0x74, 0x60, 0xa0, 0xf6, 0x60, 0xc9, 0x2a, 0x46, 0x5e, 0x42, 0x4f, 0x7d, 0x7d, 0x4d, 0x35,
	0x9a, 0xfb, 0x56, 0xab, 0x2a, 0xa0, 0x3a, 0x45, 0xde, 0xc2, 0xc0, 0x8c, 0x44, 0x06, 0x9d, 0x8b,
	0xee, 0xe5, 0x68, 0x3e, 0xb6, 0x65, 0x66, 0xb6, 0xd4, 0x56, 0x90, 0x57, 0xe0, 0xaa, 0x9b, 0x65,
	0xd0, 0xd5, 0xa5, 0x47, 0x46, 0xa5, 0x9c, 0x36, 0x39, 0xb5, 0x89, 0xb7, 0x75, 0x92, 0x90, 0xf7,
	0x30, 0xd8, 0xd4, 0x49, 0x62, 0x1f, 0xc4, 0xd9, 0x3c, 0x98, 0xb6, 0xef, 0x78, 0xfa, 0x55, 0x8d,
	0xe2, 0x2e, 0x49, 0x30, 0x52, 0xcf, 0x83, 0xda, 0x4a, 0x65, 0x3f, 0x65, 0xb2, 0x32, 0x46, 0x75,
	0x1c, 0xa6, 0xe0, 0x2e, 0x76, 0x28, 0x25, 0x99, 0xc1, 0x30, 0x52, 0xc1, 0x09, 0xe7, 0x53, 0xab,
	0x61, 0x61, 0x32, 0xf4, 0x58, 0xa3, 0x96, 0xf1, 0xc0, 0x25, 0xdf, 0xa4, 0xcd, 0xd2, 0x0f, 0x68,
	0x0b, 0x55, 0x26, 0xe3, 0x02, 0xef, 0xed, 0xf8, 0x5a, 0xf8, 0x7a, 0x0e, 0x83, 0x96, 0x8a, 0xf8,
	0x30, 0x5c, 0xac, 0x57, 0xe2, 0xc0, 0x52, 0x1e, 0x8f, 0x9f, 0x90, 0x11, 0xf4, 0x17, 0xeb, 0xdb,
	0x94, 0x89, 0xfd, 0xd8, 0x21, 0x00, 0xde, 0x62, 0xfd, 0x99, 0x0b, 0x1c, 0x77, 0x36, 0x9e, 0xfe,
	0x37, 0xba, 0xfa, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x51, 0xf5, 0x83, 0x8a, 0x00, 0x05, 0x00, 0x00,
}
