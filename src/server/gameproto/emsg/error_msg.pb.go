// Code generated by protoc-gen-go. DO NOT EDIT.
// source: emsg/error_msg.proto

/*
Package emsg is a generated protocol buffer package.

It is generated from these files:
	emsg/error_msg.proto

It has these top-level messages:
*/
package emsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 基础错误
type SystemErr int32

const (
	SystemErr_SE_Succeed         SystemErr = 0
	SystemErr_SE_Service         SystemErr = 1
	SystemErr_SE_NotEnoughParams SystemErr = 2
	SystemErr_SE_InvalidParams   SystemErr = 3
)

var SystemErr_name = map[int32]string{
	0: "SE_Succeed",
	1: "SE_Service",
	2: "SE_NotEnoughParams",
	3: "SE_InvalidParams",
}
var SystemErr_value = map[string]int32{
	"SE_Succeed":         0,
	"SE_Service":         1,
	"SE_NotEnoughParams": 2,
	"SE_InvalidParams":   3,
}

func (x SystemErr) String() string {
	return proto.EnumName(SystemErr_name, int32(x))
}
func (SystemErr) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 登录流程错误
type LoginErr int32

const (
	LoginErr_LE_Succeed           LoginErr = 0
	LoginErr_LE_DB                LoginErr = 1001
	LoginErr_LE_AuthTimeout       LoginErr = 1002
	LoginErr_LE_Authenticated     LoginErr = 1003
	LoginErr_LE_Authenticating    LoginErr = 1004
	LoginErr_LE_UnAuthenticated   LoginErr = 1005
	LoginErr_LE_LoginTimeout      LoginErr = 1006
	LoginErr_LE_Logining          LoginErr = 1007
	LoginErr_LE_ReLogined         LoginErr = 1008
	LoginErr_LE_LoginProtected    LoginErr = 1009
	LoginErr_LE_CheckSign         LoginErr = 1010
	LoginErr_LE_AccountIsLocked   LoginErr = 1011
	LoginErr_LE_AccountIsBanned   LoginErr = 1012
	LoginErr_LE_UserNotFound      LoginErr = 1013
	LoginErr_LE_SaveUserBriefData LoginErr = 1014
	LoginErr_LE_SyncUserBriefData LoginErr = 1015
	LoginErr_LE_SessionNotFound   LoginErr = 1016
)

var LoginErr_name = map[int32]string{
	0:    "LE_Succeed",
	1001: "LE_DB",
	1002: "LE_AuthTimeout",
	1003: "LE_Authenticated",
	1004: "LE_Authenticating",
	1005: "LE_UnAuthenticated",
	1006: "LE_LoginTimeout",
	1007: "LE_Logining",
	1008: "LE_ReLogined",
	1009: "LE_LoginProtected",
	1010: "LE_CheckSign",
	1011: "LE_AccountIsLocked",
	1012: "LE_AccountIsBanned",
	1013: "LE_UserNotFound",
	1014: "LE_SaveUserBriefData",
	1015: "LE_SyncUserBriefData",
	1016: "LE_SessionNotFound",
}
var LoginErr_value = map[string]int32{
	"LE_Succeed":           0,
	"LE_DB":                1001,
	"LE_AuthTimeout":       1002,
	"LE_Authenticated":     1003,
	"LE_Authenticating":    1004,
	"LE_UnAuthenticated":   1005,
	"LE_LoginTimeout":      1006,
	"LE_Logining":          1007,
	"LE_ReLogined":         1008,
	"LE_LoginProtected":    1009,
	"LE_CheckSign":         1010,
	"LE_AccountIsLocked":   1011,
	"LE_AccountIsBanned":   1012,
	"LE_UserNotFound":      1013,
	"LE_SaveUserBriefData": 1014,
	"LE_SyncUserBriefData": 1015,
	"LE_SessionNotFound":   1016,
}

func (x LoginErr) String() string {
	return proto.EnumName(LoginErr_name, int32(x))
}
func (LoginErr) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// 业务逻辑错误
type BizErr int32

const (
	BizErr_BE_Succeed BizErr = 0
)

var BizErr_name = map[int32]string{
	0: "BE_Succeed",
}
var BizErr_value = map[string]int32{
	"BE_Succeed": 0,
}

func (x BizErr) String() string {
	return proto.EnumName(BizErr_name, int32(x))
}
func (BizErr) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterEnum("emsg.SystemErr", SystemErr_name, SystemErr_value)
	proto.RegisterEnum("emsg.LoginErr", LoginErr_name, LoginErr_value)
	proto.RegisterEnum("emsg.BizErr", BizErr_name, BizErr_value)
}

func init() { proto.RegisterFile("emsg/error_msg.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 357 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xcb, 0x8e, 0xd3, 0x30,
	0x14, 0x86, 0x81, 0x42, 0x0d, 0x07, 0x54, 0x5c, 0x13, 0x0a, 0xbc, 0x42, 0x17, 0xb0, 0xe0, 0x09,
	0x1a, 0x6a, 0xa4, 0x4a, 0x56, 0x55, 0x11, 0xba, 0x60, 0x65, 0x19, 0xe7, 0x90, 0x5a, 0x25, 0x36,
	0xb2, 0x9d, 0x4a, 0x65, 0xc5, 0xeb, 0x72, 0xbf, 0xcf, 0xcc, 0x72, 0x94, 0x28, 0xae, 0x5a, 0xcd,
	0xd2, 0xdf, 0x6f, 0x7f, 0xe7, 0xe8, 0x97, 0x21, 0xc3, 0x3a, 0x54, 0xcf, 0xd0, 0x7b, 0xe7, 0x65,
	0x1d, 0xaa, 0xa7, 0x1f, 0xbc, 0x8b, 0x8e, 0xdd, 0x6c, 0xe9, 0xf4, 0x0d, 0xdc, 0x29, 0xf6, 0x21,
	0x62, 0xcd, 0xbd, 0x67, 0x23, 0x80, 0x82, 0xcb, 0xa2, 0xd1, 0x1a, 0xb1, 0xa4, 0xd7, 0xd2, 0x19,
	0xfd, 0xce, 0x68, 0xa4, 0xd7, 0xd9, 0x04, 0x58, 0xc1, 0xe5, 0xd2, 0x45, 0x6e, 0x5d, 0x53, 0x6d,
	0x56, 0xca, 0xab, 0x3a, 0xd0, 0x1b, 0x2c, 0x03, 0x5a, 0x70, 0xb9, 0xb0, 0x3b, 0xf5, 0xde, 0x94,
	0x3d, 0x1d, 0x4c, 0x3f, 0x0d, 0xe0, 0xb6, 0x70, 0x95, 0xb1, 0xbd, 0x5a, 0x1c, 0xab, 0x01, 0x6e,
	0x09, 0x2e, 0xe7, 0x39, 0xfd, 0x4c, 0xd8, 0x03, 0x18, 0x09, 0x2e, 0x67, 0x4d, 0xdc, 0xbc, 0x36,
	0x35, 0xba, 0x26, 0xd2, 0x2f, 0x84, 0x3d, 0x04, 0xda, 0x43, 0xb4, 0xd1, 0x68, 0x15, 0xb1, 0xa4,
	0x5f, 0x09, 0x9b, 0xc0, 0xf8, 0x14, 0x1b, 0x5b, 0xd1, 0x6f, 0x84, 0x3d, 0x02, 0x26, 0xb8, 0x5c,
	0xdb, 0xd3, 0x07, 0xdf, 0x09, 0xcb, 0xe0, 0xbe, 0xe0, 0xb2, 0xdb, 0x23, 0xd9, 0x7f, 0x10, 0x46,
	0xe1, 0x6e, 0xa2, 0xad, 0xe0, 0x27, 0x61, 0x63, 0xb8, 0x27, 0xb8, 0x7c, 0x85, 0x1d, 0xc3, 0x92,
	0xfe, 0x4a, 0xb3, 0x3a, 0xb0, 0xf2, 0x2e, 0xa2, 0x6e, 0x95, 0xbf, 0xd3, 0xd5, 0x17, 0x1b, 0xd4,
	0xdb, 0xc2, 0x54, 0x96, 0xfe, 0x49, 0xe3, 0x67, 0x5a, 0xbb, 0xc6, 0xc6, 0x45, 0x10, 0x4e, 0x6f,
	0xb1, 0xa4, 0x7f, 0xaf, 0x04, 0xb9, 0xb2, 0xad, 0xfc, 0x5f, 0xda, 0x6b, 0x1d, 0xd0, 0x2f, 0x5d,
	0x7c, 0xe9, 0x1a, 0x5b, 0xd2, 0xff, 0x84, 0x3d, 0x81, 0xac, 0xad, 0x49, 0xed, 0xb0, 0x4d, 0x72,
	0x6f, 0xf0, 0xdd, 0x5c, 0x45, 0x45, 0xcf, 0x0e, 0xd1, 0xde, 0xea, 0xd3, 0xe8, 0x3c, 0x0d, 0x29,
	0x30, 0x04, 0xe3, 0xec, 0x41, 0x77, 0x41, 0xa6, 0x8f, 0x61, 0x98, 0x9b, 0x8f, 0x7d, 0xff, 0xf9,
	0x51, 0xff, 0x6f, 0x87, 0xdd, 0x27, 0x78, 0x7e, 0x19, 0x00, 0x00, 0xff, 0xff, 0x43, 0x7f, 0x4d,
	0xee, 0x1c, 0x02, 0x00, 0x00,
}
