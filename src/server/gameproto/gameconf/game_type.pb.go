// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gameconf/game_type.proto

package gameconf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Defined in table: DoNotUseThis
type SkillTyp int32

const (
	SkillTyp_STInvalid SkillTyp = 0
	// 普通
	SkillTyp_STNormal SkillTyp = 1
	// 火
	SkillTyp_STFire SkillTyp = 2
	// 水
	SkillTyp_STWater SkillTyp = 3
	// 草
	SkillTyp_STGrass SkillTyp = 4
)

var SkillTyp_name = map[int32]string{
	0: "STInvalid",
	1: "STNormal",
	2: "STFire",
	3: "STWater",
	4: "STGrass",
}
var SkillTyp_value = map[string]int32{
	"STInvalid": 0,
	"STNormal":  1,
	"STFire":    2,
	"STWater":   3,
	"STGrass":   4,
}

func (x SkillTyp) String() string {
	return proto.EnumName(SkillTyp_name, int32(x))
}
func (SkillTyp) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// Defined in table: DoNotUseThis
type SkillAttackTyp int32

const (
	SkillAttackTyp_SATInvliad SkillAttackTyp = 0
	// 物理
	SkillAttackTyp_SATAttack SkillAttackTyp = 1
	// 特攻
	SkillAttackTyp_SATSpecial SkillAttackTyp = 2
	// 变化
	SkillAttackTyp_SATChange SkillAttackTyp = 3
)

var SkillAttackTyp_name = map[int32]string{
	0: "SATInvliad",
	1: "SATAttack",
	2: "SATSpecial",
	3: "SATChange",
}
var SkillAttackTyp_value = map[string]int32{
	"SATInvliad": 0,
	"SATAttack":  1,
	"SATSpecial": 2,
	"SATChange":  3,
}

func (x SkillAttackTyp) String() string {
	return proto.EnumName(SkillAttackTyp_name, int32(x))
}
func (SkillAttackTyp) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

// Defined in table: DoNotUseThis
type SkillEffectObjectTyp int32

const (
	SkillEffectObjectTyp_SEOTInvalid SkillEffectObjectTyp = 0
	// 己方
	SkillEffectObjectTyp_SEOTSelf SkillEffectObjectTyp = 1
	// 对方
	SkillEffectObjectTyp_SEOTOpponent SkillEffectObjectTyp = 2
)

var SkillEffectObjectTyp_name = map[int32]string{
	0: "SEOTInvalid",
	1: "SEOTSelf",
	2: "SEOTOpponent",
}
var SkillEffectObjectTyp_value = map[string]int32{
	"SEOTInvalid":  0,
	"SEOTSelf":     1,
	"SEOTOpponent": 2,
}

func (x SkillEffectObjectTyp) String() string {
	return proto.EnumName(SkillEffectObjectTyp_name, int32(x))
}
func (SkillEffectObjectTyp) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

// Defined in table: DoNotUseThis
type SkillEffectTyp int32

const (
	SkillEffectTyp_SETInvliad SkillEffectTyp = 0
	// 灼烧
	SkillEffectTyp_SETFire SkillEffectTyp = 1
	// 攻击变化
	SkillEffectTyp_SETAttack SkillEffectTyp = 2
)

var SkillEffectTyp_name = map[int32]string{
	0: "SETInvliad",
	1: "SETFire",
	2: "SETAttack",
}
var SkillEffectTyp_value = map[string]int32{
	"SETInvliad": 0,
	"SETFire":    1,
	"SETAttack":  2,
}

func (x SkillEffectTyp) String() string {
	return proto.EnumName(SkillEffectTyp_name, int32(x))
}
func (SkillEffectTyp) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

// Defined in table: DoNotUseThis
type DoNotUseThis struct {
	DoNotUseThis []*DoNotUseThisDefine `protobuf:"bytes,1,rep,name=DoNotUseThis" json:"DoNotUseThis,omitempty"`
}

func (m *DoNotUseThis) Reset()                    { *m = DoNotUseThis{} }
func (m *DoNotUseThis) String() string            { return proto.CompactTextString(m) }
func (*DoNotUseThis) ProtoMessage()               {}
func (*DoNotUseThis) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *DoNotUseThis) GetDoNotUseThis() []*DoNotUseThisDefine {
	if m != nil {
		return m.DoNotUseThis
	}
	return nil
}

// Defined in table: DoNotUseThis
type DoNotUseThisDefine struct {
	ConfID int32 `protobuf:"varint,1,opt,name=ConfID" json:"ConfID,omitempty"`
}

func (m *DoNotUseThisDefine) Reset()                    { *m = DoNotUseThisDefine{} }
func (m *DoNotUseThisDefine) String() string            { return proto.CompactTextString(m) }
func (*DoNotUseThisDefine) ProtoMessage()               {}
func (*DoNotUseThisDefine) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *DoNotUseThisDefine) GetConfID() int32 {
	if m != nil {
		return m.ConfID
	}
	return 0
}

func init() {
	proto.RegisterType((*DoNotUseThis)(nil), "gameconf.DoNotUseThis")
	proto.RegisterType((*DoNotUseThisDefine)(nil), "gameconf.DoNotUseThisDefine")
	proto.RegisterEnum("gameconf.SkillTyp", SkillTyp_name, SkillTyp_value)
	proto.RegisterEnum("gameconf.SkillAttackTyp", SkillAttackTyp_name, SkillAttackTyp_value)
	proto.RegisterEnum("gameconf.SkillEffectObjectTyp", SkillEffectObjectTyp_name, SkillEffectObjectTyp_value)
	proto.RegisterEnum("gameconf.SkillEffectTyp", SkillEffectTyp_name, SkillEffectTyp_value)
}

func init() { proto.RegisterFile("gameconf/game_type.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 312 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xcf, 0x4f, 0xc2, 0x30,
	0x14, 0xc7, 0xdd, 0x50, 0xc4, 0x07, 0x62, 0xd3, 0x18, 0xc3, 0xc1, 0x03, 0xe1, 0x44, 0x16, 0x83,
	0x89, 0x5e, 0x3d, 0x48, 0x60, 0x12, 0x0e, 0x32, 0x43, 0x6b, 0x3c, 0x9a, 0x32, 0xdf, 0xa0, 0x52,
	0xda, 0x65, 0x6b, 0x4c, 0xf8, 0xef, 0x4d, 0xf7, 0x23, 0x01, 0xbd, 0xf5, 0x9b, 0x6f, 0xdf, 0xa7,
	0x9f, 0x97, 0x42, 0x6f, 0x2d, 0x76, 0x18, 0x1b, 0x9d, 0xdc, 0xbb, 0xc3, 0xa7, 0xdd, 0xa7, 0x38,
	0x4a, 0x33, 0x63, 0x0d, 0x6d, 0xd5, 0xcd, 0xe0, 0x0d, 0x3a, 0x53, 0xb3, 0x30, 0xf6, 0x3d, 0x47,
	0xbe, 0x91, 0x39, 0x7d, 0x3e, 0xce, 0x3d, 0xaf, 0xdf, 0x18, 0xb6, 0x1f, 0x6e, 0x47, 0xf5, 0xc0,
	0xe8, 0xb0, 0x9d, 0x62, 0x22, 0x35, 0x2e, 0x8f, 0x26, 0x06, 0x77, 0x40, 0xff, 0xdf, 0xa1, 0x37,
	0xd0, 0x9c, 0x18, 0x9d, 0xcc, 0xa7, 0x3d, 0xaf, 0xef, 0x0d, 0xcf, 0x96, 0x55, 0x0a, 0x5e, 0xa1,
	0xc5, 0xb6, 0x52, 0x29, 0xbe, 0x4f, 0xe9, 0x25, 0x5c, 0x30, 0x3e, 0xd7, 0x3f, 0x42, 0xc9, 0x2f,
	0x72, 0x42, 0x3b, 0xd0, 0x62, 0x7c, 0x61, 0xb2, 0x9d, 0x50, 0xc4, 0xa3, 0x00, 0x4d, 0xc6, 0x5f,
	0x64, 0x86, 0xc4, 0xa7, 0x6d, 0x38, 0x67, 0xfc, 0x43, 0x58, 0xcc, 0x48, 0xa3, 0x0c, 0xb3, 0x4c,
	0xe4, 0x39, 0x39, 0x0d, 0x16, 0xd0, 0x2d, 0x70, 0x63, 0x6b, 0x45, 0xbc, 0x75, 0xd0, 0x2e, 0x00,
	0x1b, 0x3b, 0xaa, 0x92, 0xc2, 0x51, 0xdd, 0x23, 0x63, 0x5e, 0xf6, 0xc4, 0xab, 0x6a, 0x96, 0x62,
	0x2c, 0x85, 0x22, 0x7e, 0x55, 0x4f, 0x36, 0x42, 0xaf, 0x91, 0x34, 0x82, 0x19, 0x5c, 0x17, 0xbc,
	0x30, 0x49, 0x30, 0xb6, 0xd1, 0xea, 0x1b, 0x63, 0xeb, 0xa8, 0x57, 0xd0, 0x66, 0x61, 0xf4, 0x47,
	0x36, 0x8c, 0x38, 0x43, 0x95, 0x10, 0x8f, 0x12, 0xe8, 0xb8, 0x14, 0xa5, 0xa9, 0xd1, 0xa8, 0x2d,
	0xf1, 0x83, 0xa7, 0x4a, 0xac, 0x04, 0xd5, 0x62, 0xe1, 0x81, 0x98, 0xdb, 0x23, 0x2c, 0x37, 0xf4,
	0x0a, 0x8d, 0xb0, 0xb6, 0xf4, 0x57, 0xcd, 0xe2, 0xdb, 0x1e, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x50, 0xea, 0xe7, 0xc7, 0xd2, 0x01, 0x00, 0x00,
}
