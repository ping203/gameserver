// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cmsg/client_msg.proto

/*
Package cmsg is a generated protocol buffer package.

It is generated from these files:
	cmsg/client_msg.proto

It has these top-level messages:
	CReqSyncSystemTime
	CRespSyncSystemTime
	CReqAuth
	CRespAuth
	CReqLogin
	CRespLogin
	CReqLogout
	CRespLogout
	CNotifyLogout
	CReqUserLoginState
	CRespUserLoginState
	CReqNotifyUserData
	CRespNotifyUserData
*/
package cmsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import gamedef "github.com/wenxiu2199/gameserver/src/server/gameproto/gamedef"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 同步系统时间
type CReqSyncSystemTime struct {
	XId       string `protobuf:"bytes,12,opt,name=_id,json=Id" json:"_id,omitempty"`
	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *CReqSyncSystemTime) Reset()                    { *m = CReqSyncSystemTime{} }
func (m *CReqSyncSystemTime) String() string            { return proto.CompactTextString(m) }
func (*CReqSyncSystemTime) ProtoMessage()               {}
func (*CReqSyncSystemTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CReqSyncSystemTime) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *CReqSyncSystemTime) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type CRespSyncSystemTime struct {
	Timestamp       int64 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	ServerTimestamp int64 `protobuf:"varint,2,opt,name=serverTimestamp" json:"serverTimestamp,omitempty"`
}

func (m *CRespSyncSystemTime) Reset()                    { *m = CRespSyncSystemTime{} }
func (m *CRespSyncSystemTime) String() string            { return proto.CompactTextString(m) }
func (*CRespSyncSystemTime) ProtoMessage()               {}
func (*CRespSyncSystemTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CRespSyncSystemTime) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *CRespSyncSystemTime) GetServerTimestamp() int64 {
	if m != nil {
		return m.ServerTimestamp
	}
	return 0
}

// 玩家认证请求
type CReqAuth struct {
	Account  string                    `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Password string                    `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Extra    *gamedef.ExtraAccountInfo `protobuf:"bytes,3,opt,name=extra" json:"extra,omitempty"`
}

func (m *CReqAuth) Reset()                    { *m = CReqAuth{} }
func (m *CReqAuth) String() string            { return proto.CompactTextString(m) }
func (*CReqAuth) ProtoMessage()               {}
func (*CReqAuth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CReqAuth) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *CReqAuth) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CReqAuth) GetExtra() *gamedef.ExtraAccountInfo {
	if m != nil {
		return m.Extra
	}
	return nil
}

type CRespAuth struct {
	ErrCode    uint32 `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg     string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	Account    string `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	UserID     uint64 `protobuf:"varint,4,opt,name=userID" json:"userID,omitempty"`
	Sign       string `protobuf:"bytes,5,opt,name=sign" json:"sign,omitempty"`
	UnlockTime int64  `protobuf:"varint,6,opt,name=unlockTime" json:"unlockTime,omitempty"`
}

func (m *CRespAuth) Reset()                    { *m = CRespAuth{} }
func (m *CRespAuth) String() string            { return proto.CompactTextString(m) }
func (*CRespAuth) ProtoMessage()               {}
func (*CRespAuth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CRespAuth) GetErrCode() uint32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CRespAuth) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *CRespAuth) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *CRespAuth) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *CRespAuth) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *CRespAuth) GetUnlockTime() int64 {
	if m != nil {
		return m.UnlockTime
	}
	return 0
}

// 玩家登录请求
type CReqLogin struct {
	UserID uint64 `protobuf:"varint,1,opt,name=userID" json:"userID,omitempty"`
	Sign   string `protobuf:"bytes,2,opt,name=sign" json:"sign,omitempty"`
}

func (m *CReqLogin) Reset()                    { *m = CReqLogin{} }
func (m *CReqLogin) String() string            { return proto.CompactTextString(m) }
func (*CReqLogin) ProtoMessage()               {}
func (*CReqLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CReqLogin) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *CReqLogin) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

type CRespLogin struct {
	ErrCode     uint32        `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg      string        `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	UserID      uint64        `protobuf:"varint,3,opt,name=userID" json:"userID,omitempty"`
	User        *gamedef.User `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
	IsReconnect bool          `protobuf:"varint,5,opt,name=isReconnect" json:"isReconnect,omitempty"`
}

func (m *CRespLogin) Reset()                    { *m = CRespLogin{} }
func (m *CRespLogin) String() string            { return proto.CompactTextString(m) }
func (*CRespLogin) ProtoMessage()               {}
func (*CRespLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CRespLogin) GetErrCode() uint32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CRespLogin) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *CRespLogin) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *CRespLogin) GetUser() *gamedef.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CRespLogin) GetIsReconnect() bool {
	if m != nil {
		return m.IsReconnect
	}
	return false
}

// 玩家登出请求
type CReqLogout struct {
}

func (m *CReqLogout) Reset()                    { *m = CReqLogout{} }
func (m *CReqLogout) String() string            { return proto.CompactTextString(m) }
func (*CReqLogout) ProtoMessage()               {}
func (*CReqLogout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type CRespLogout struct {
	ErrCode uint32 `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *CRespLogout) Reset()                    { *m = CRespLogout{} }
func (m *CRespLogout) String() string            { return proto.CompactTextString(m) }
func (*CRespLogout) ProtoMessage()               {}
func (*CRespLogout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CRespLogout) GetErrCode() uint32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CRespLogout) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

// 玩家被提出
type CNotifyLogout struct {
	LoginInfo *gamedef.LoginInfo `protobuf:"bytes,1,opt,name=loginInfo" json:"loginInfo,omitempty"`
}

func (m *CNotifyLogout) Reset()                    { *m = CNotifyLogout{} }
func (m *CNotifyLogout) String() string            { return proto.CompactTextString(m) }
func (*CNotifyLogout) ProtoMessage()               {}
func (*CNotifyLogout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CNotifyLogout) GetLoginInfo() *gamedef.LoginInfo {
	if m != nil {
		return m.LoginInfo
	}
	return nil
}

// 玩家登录状态请求
type CReqUserLoginState struct {
	UserID uint64 `protobuf:"varint,1,opt,name=userID" json:"userID,omitempty"`
	Sign   string `protobuf:"bytes,2,opt,name=sign" json:"sign,omitempty"`
}

func (m *CReqUserLoginState) Reset()                    { *m = CReqUserLoginState{} }
func (m *CReqUserLoginState) String() string            { return proto.CompactTextString(m) }
func (*CReqUserLoginState) ProtoMessage()               {}
func (*CReqUserLoginState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CReqUserLoginState) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *CReqUserLoginState) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

type CRespUserLoginState struct {
	ErrCode   uint32             `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg    string             `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	UserID    uint64             `protobuf:"varint,3,opt,name=userID" json:"userID,omitempty"`
	IsLogin   bool               `protobuf:"varint,4,opt,name=isLogin" json:"isLogin,omitempty"`
	LoginInfo *gamedef.LoginInfo `protobuf:"bytes,5,opt,name=loginInfo" json:"loginInfo,omitempty"`
}

func (m *CRespUserLoginState) Reset()                    { *m = CRespUserLoginState{} }
func (m *CRespUserLoginState) String() string            { return proto.CompactTextString(m) }
func (*CRespUserLoginState) ProtoMessage()               {}
func (*CRespUserLoginState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CRespUserLoginState) GetErrCode() uint32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CRespUserLoginState) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *CRespUserLoginState) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *CRespUserLoginState) GetIsLogin() bool {
	if m != nil {
		return m.IsLogin
	}
	return false
}

func (m *CRespUserLoginState) GetLoginInfo() *gamedef.LoginInfo {
	if m != nil {
		return m.LoginInfo
	}
	return nil
}

// 请求玩家数据
type CReqNotifyUserData struct {
}

func (m *CReqNotifyUserData) Reset()                    { *m = CReqNotifyUserData{} }
func (m *CReqNotifyUserData) String() string            { return proto.CompactTextString(m) }
func (*CReqNotifyUserData) ProtoMessage()               {}
func (*CReqNotifyUserData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

// 返回玩家数据
type CRespNotifyUserData struct {
	ErrCode uint32 `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *CRespNotifyUserData) Reset()                    { *m = CRespNotifyUserData{} }
func (m *CRespNotifyUserData) String() string            { return proto.CompactTextString(m) }
func (*CRespNotifyUserData) ProtoMessage()               {}
func (*CRespNotifyUserData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *CRespNotifyUserData) GetErrCode() uint32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CRespNotifyUserData) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*CReqSyncSystemTime)(nil), "cmsg.CReqSyncSystemTime")
	proto.RegisterType((*CRespSyncSystemTime)(nil), "cmsg.CRespSyncSystemTime")
	proto.RegisterType((*CReqAuth)(nil), "cmsg.CReqAuth")
	proto.RegisterType((*CRespAuth)(nil), "cmsg.CRespAuth")
	proto.RegisterType((*CReqLogin)(nil), "cmsg.CReqLogin")
	proto.RegisterType((*CRespLogin)(nil), "cmsg.CRespLogin")
	proto.RegisterType((*CReqLogout)(nil), "cmsg.CReqLogout")
	proto.RegisterType((*CRespLogout)(nil), "cmsg.CRespLogout")
	proto.RegisterType((*CNotifyLogout)(nil), "cmsg.CNotifyLogout")
	proto.RegisterType((*CReqUserLoginState)(nil), "cmsg.CReqUserLoginState")
	proto.RegisterType((*CRespUserLoginState)(nil), "cmsg.CRespUserLoginState")
	proto.RegisterType((*CReqNotifyUserData)(nil), "cmsg.CReqNotifyUserData")
	proto.RegisterType((*CRespNotifyUserData)(nil), "cmsg.CRespNotifyUserData")
}

func init() { proto.RegisterFile("cmsg/client_msg.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 525 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0x95, 0xf3, 0xaf, 0xf1, 0xa4, 0x51, 0xa5, 0xfd, 0xfd, 0xa8, 0x4c, 0x85, 0x50, 0xf0, 0x29,
	0xa7, 0x18, 0xc2, 0x01, 0xf5, 0x04, 0x51, 0x8a, 0x50, 0xa4, 0xc0, 0x61, 0x53, 0x8e, 0x28, 0x72,
	0xed, 0x89, 0xbb, 0x22, 0xf6, 0x26, 0xbb, 0x6b, 0xda, 0x7c, 0x16, 0x8e, 0x1c, 0xf9, 0x92, 0x68,
	0xc7, 0x76, 0xfe, 0x09, 0x21, 0x22, 0x71, 0xca, 0xcc, 0xdb, 0xd9, 0x37, 0xef, 0xbd, 0x68, 0x0d,
	0x4f, 0xa2, 0x54, 0x27, 0x41, 0xb4, 0x14, 0x98, 0x99, 0x79, 0xaa, 0x93, 0xc1, 0x4a, 0x49, 0x23,
	0x59, 0xc3, 0xc2, 0x57, 0xd3, 0x44, 0x98, 0xfb, 0xfc, 0x6e, 0x10, 0xc9, 0x34, 0x78, 0xc0, 0xec,
	0x51, 0xe4, 0xc3, 0x57, 0xd7, 0xd7, 0x41, 0x12, 0xa6, 0xa8, 0x51, 0x7d, 0x43, 0x15, 0x68, 0x15,
	0x05, 0x65, 0x69, 0x51, 0xba, 0x4c, 0x55, 0x8c, 0x0b, 0xfa, 0x9d, 0xc7, 0xb8, 0x28, 0x38, 0xfd,
	0x31, 0xb0, 0x31, 0xc7, 0xf5, 0x6c, 0x93, 0x45, 0xb3, 0x8d, 0x36, 0x98, 0xde, 0x8a, 0x14, 0xd9,
	0x05, 0xd4, 0xe7, 0x22, 0xf6, 0xce, 0x7b, 0x4e, 0xdf, 0xe5, 0xb5, 0x49, 0xcc, 0x9e, 0x81, 0x6b,
	0x44, 0x8a, 0xda, 0x84, 0xe9, 0xca, 0x73, 0x7a, 0x4e, 0xbf, 0xce, 0x77, 0x80, 0xff, 0x05, 0xfe,
	0x1b, 0x73, 0xd4, 0xab, 0x23, 0x96, 0x3f, 0x5e, 0x62, 0x7d, 0xb8, 0x28, 0x44, 0xde, 0x6e, 0x67,
	0x6a, 0x34, 0x73, 0x0c, 0xfb, 0x6b, 0x68, 0x5b, 0x8d, 0xa3, 0xdc, 0xdc, 0x33, 0x0f, 0xce, 0xc2,
	0x28, 0x92, 0x79, 0x66, 0x88, 0xd1, 0xe5, 0x55, 0xcb, 0xae, 0xa0, 0xbd, 0x0a, 0xb5, 0x7e, 0x90,
	0x2a, 0x26, 0x22, 0x97, 0x6f, 0x7b, 0x16, 0x40, 0x13, 0x1f, 0x8d, 0x0a, 0xbd, 0x7a, 0xcf, 0xe9,
	0x77, 0x86, 0x4f, 0x07, 0x65, 0x1a, 0x83, 0xf7, 0x16, 0x1d, 0x15, 0x0c, 0x93, 0x6c, 0x21, 0x79,
	0x31, 0xe7, 0xff, 0x70, 0xc0, 0x25, 0x4b, 0xd5, 0x52, 0x54, 0x6a, 0x2c, 0x63, 0xa4, 0xa5, 0x5d,
	0x5e, 0xb5, 0xec, 0x12, 0x5a, 0xa8, 0xd4, 0x47, 0x9d, 0x94, 0x2b, 0xcb, 0x6e, 0x5f, 0x66, 0xfd,
	0x50, 0xe6, 0x25, 0xb4, 0x72, 0x8d, 0x6a, 0x72, 0xe3, 0x35, 0x7a, 0x4e, 0xbf, 0xc1, 0xcb, 0x8e,
	0x31, 0x68, 0x68, 0x91, 0x64, 0x5e, 0x93, 0xc6, 0xa9, 0x66, 0xcf, 0x01, 0xf2, 0x6c, 0x29, 0xa3,
	0xaf, 0x36, 0x0b, 0xaf, 0x45, 0xe9, 0xec, 0x21, 0xfe, 0x1b, 0x12, 0xb9, 0x9e, 0xca, 0x44, 0x64,
	0x7b, 0xc4, 0xce, 0x6f, 0x89, 0x6b, 0x3b, 0x62, 0xff, 0xbb, 0x03, 0x40, 0xf6, 0x8a, 0xab, 0xa7,
	0xfb, 0xdb, 0x2d, 0xab, 0x1f, 0x2c, 0x7b, 0x01, 0x0d, 0x5b, 0x91, 0xb7, 0xce, 0xb0, 0xbb, 0xcd,
	0xf9, 0xb3, 0x46, 0xc5, 0xe9, 0x88, 0xf5, 0xa0, 0x23, 0x34, 0xc7, 0x48, 0x66, 0x19, 0x46, 0x86,
	0xfc, 0xb6, 0xf9, 0x3e, 0xe4, 0x9f, 0x93, 0x38, 0x6b, 0x4b, 0xe6, 0xc6, 0x7f, 0x0b, 0x9d, 0x4a,
	0xaa, 0xcc, 0xcd, 0xe9, 0x5a, 0xfd, 0x11, 0x74, 0xc7, 0x9f, 0xa4, 0x11, 0x8b, 0x4d, 0x49, 0xf1,
	0x12, 0xdc, 0xa5, 0xf5, 0x6d, 0xff, 0x70, 0x22, 0xe9, 0x0c, 0xd9, 0x56, 0xe9, 0xb4, 0x3a, 0xe1,
	0xbb, 0x21, 0xff, 0x5d, 0xf1, 0x4a, 0xac, 0x0b, 0x3a, 0x9f, 0x99, 0xd0, 0xe0, 0x49, 0x89, 0xff,
	0x74, 0xca, 0x37, 0x72, 0xc4, 0xf1, 0xef, 0xa2, 0xf7, 0xe0, 0x4c, 0x68, 0x62, 0xa6, 0xf4, 0xdb,
	0xbc, 0x6a, 0x0f, 0xfd, 0x36, 0xff, 0xc6, 0xef, 0xff, 0x85, 0xdf, 0x22, 0x35, 0xab, 0xf8, 0x26,
	0x34, 0xa1, 0xff, 0xa1, 0xb4, 0x70, 0x08, 0x9f, 0x6e, 0xe1, 0xae, 0x45, 0xdf, 0x9e, 0xd7, 0xbf,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x8f, 0x52, 0xe0, 0xe8, 0x04, 0x00, 0x00,
}
