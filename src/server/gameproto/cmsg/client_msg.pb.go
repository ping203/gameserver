// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cmsg/client_msg.proto

/*
Package cmsg is a generated protocol buffer package.

It is generated from these files:
	cmsg/client_msg.proto

It has these top-level messages:
	CReqSyncSystemTime
	CRespSyncSystemTime
	CReqAuth
	CRespAuth
	CNotifyLoginInfo
	CReqLogin
	CRespLogin
	CReqLogout
	CRespLogout
	CNotifyLogout
	CReqNotifyUserData
	CRespNotifyUserData
	CReqLeftClick
	CRespLeftClick
*/
package cmsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import gamedef "github.com/wenxiu2199/gameserver/src/server/gameproto/gamedef"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 同步系统时间
type CReqSyncSystemTime struct {
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *CReqSyncSystemTime) Reset()                    { *m = CReqSyncSystemTime{} }
func (m *CReqSyncSystemTime) String() string            { return proto.CompactTextString(m) }
func (*CReqSyncSystemTime) ProtoMessage()               {}
func (*CReqSyncSystemTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CReqSyncSystemTime) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type CRespSyncSystemTime struct {
	Timestamp       int64 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	ServerTimestamp int64 `protobuf:"varint,2,opt,name=serverTimestamp" json:"serverTimestamp,omitempty"`
}

func (m *CRespSyncSystemTime) Reset()                    { *m = CRespSyncSystemTime{} }
func (m *CRespSyncSystemTime) String() string            { return proto.CompactTextString(m) }
func (*CRespSyncSystemTime) ProtoMessage()               {}
func (*CRespSyncSystemTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CRespSyncSystemTime) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *CRespSyncSystemTime) GetServerTimestamp() int64 {
	if m != nil {
		return m.ServerTimestamp
	}
	return 0
}

// 玩家认证请求
type CReqAuth struct {
	Account  string                    `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Password string                    `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Extra    *gamedef.ExtraAccountInfo `protobuf:"bytes,3,opt,name=extra" json:"extra,omitempty"`
}

func (m *CReqAuth) Reset()                    { *m = CReqAuth{} }
func (m *CReqAuth) String() string            { return proto.CompactTextString(m) }
func (*CReqAuth) ProtoMessage()               {}
func (*CReqAuth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CReqAuth) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *CReqAuth) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CReqAuth) GetExtra() *gamedef.ExtraAccountInfo {
	if m != nil {
		return m.Extra
	}
	return nil
}

type CRespAuth struct {
	ErrCode    uint32 `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg     string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	Account    string `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	UserID     uint64 `protobuf:"varint,4,opt,name=userID" json:"userID,omitempty"`
	Sign       string `protobuf:"bytes,5,opt,name=sign" json:"sign,omitempty"`
	UnlockTime int64  `protobuf:"varint,6,opt,name=unlockTime" json:"unlockTime,omitempty"`
}

func (m *CRespAuth) Reset()                    { *m = CRespAuth{} }
func (m *CRespAuth) String() string            { return proto.CompactTextString(m) }
func (*CRespAuth) ProtoMessage()               {}
func (*CRespAuth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CRespAuth) GetErrCode() uint32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CRespAuth) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *CRespAuth) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *CRespAuth) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *CRespAuth) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *CRespAuth) GetUnlockTime() int64 {
	if m != nil {
		return m.UnlockTime
	}
	return 0
}

// 账号登录通知
type CNotifyLoginInfo struct {
	Account string `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Ip      string `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
}

func (m *CNotifyLoginInfo) Reset()                    { *m = CNotifyLoginInfo{} }
func (m *CNotifyLoginInfo) String() string            { return proto.CompactTextString(m) }
func (*CNotifyLoginInfo) ProtoMessage()               {}
func (*CNotifyLoginInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CNotifyLoginInfo) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *CNotifyLoginInfo) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

// 玩家登录请求
type CReqLogin struct {
	UserID uint64 `protobuf:"varint,1,opt,name=userID" json:"userID,omitempty"`
	Sign   string `protobuf:"bytes,2,opt,name=sign" json:"sign,omitempty"`
}

func (m *CReqLogin) Reset()                    { *m = CReqLogin{} }
func (m *CReqLogin) String() string            { return proto.CompactTextString(m) }
func (*CReqLogin) ProtoMessage()               {}
func (*CReqLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CReqLogin) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *CReqLogin) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

type CRespLogin struct {
	ErrCode     uint32        `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg      string        `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	UserID      uint64        `protobuf:"varint,3,opt,name=userID" json:"userID,omitempty"`
	User        *gamedef.User `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
	IsReconnect bool          `protobuf:"varint,5,opt,name=isReconnect" json:"isReconnect,omitempty"`
}

func (m *CRespLogin) Reset()                    { *m = CRespLogin{} }
func (m *CRespLogin) String() string            { return proto.CompactTextString(m) }
func (*CRespLogin) ProtoMessage()               {}
func (*CRespLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CRespLogin) GetErrCode() uint32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CRespLogin) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *CRespLogin) GetUserID() uint64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *CRespLogin) GetUser() *gamedef.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CRespLogin) GetIsReconnect() bool {
	if m != nil {
		return m.IsReconnect
	}
	return false
}

// 玩家登出请求
type CReqLogout struct {
}

func (m *CReqLogout) Reset()                    { *m = CReqLogout{} }
func (m *CReqLogout) String() string            { return proto.CompactTextString(m) }
func (*CReqLogout) ProtoMessage()               {}
func (*CReqLogout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type CRespLogout struct {
	ErrCode uint32 `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *CRespLogout) Reset()                    { *m = CRespLogout{} }
func (m *CRespLogout) String() string            { return proto.CompactTextString(m) }
func (*CRespLogout) ProtoMessage()               {}
func (*CRespLogout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CRespLogout) GetErrCode() uint32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CRespLogout) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

// 玩家被提出
type CNotifyLogout struct {
	LoginInfo *gamedef.LoginInfo `protobuf:"bytes,1,opt,name=loginInfo" json:"loginInfo,omitempty"`
}

func (m *CNotifyLogout) Reset()                    { *m = CNotifyLogout{} }
func (m *CNotifyLogout) String() string            { return proto.CompactTextString(m) }
func (*CNotifyLogout) ProtoMessage()               {}
func (*CNotifyLogout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CNotifyLogout) GetLoginInfo() *gamedef.LoginInfo {
	if m != nil {
		return m.LoginInfo
	}
	return nil
}

// 请求玩家数据
type CReqNotifyUserData struct {
}

func (m *CReqNotifyUserData) Reset()                    { *m = CReqNotifyUserData{} }
func (m *CReqNotifyUserData) String() string            { return proto.CompactTextString(m) }
func (*CReqNotifyUserData) ProtoMessage()               {}
func (*CReqNotifyUserData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

// 返回玩家数据
type CRespNotifyUserData struct {
	ErrCode uint32 `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *CRespNotifyUserData) Reset()                    { *m = CRespNotifyUserData{} }
func (m *CRespNotifyUserData) String() string            { return proto.CompactTextString(m) }
func (*CRespNotifyUserData) ProtoMessage()               {}
func (*CRespNotifyUserData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CRespNotifyUserData) GetErrCode() uint32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CRespNotifyUserData) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

// 请求玩家数据
type CReqLeftClick struct {
	X uint32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y uint32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
}

func (m *CReqLeftClick) Reset()                    { *m = CReqLeftClick{} }
func (m *CReqLeftClick) String() string            { return proto.CompactTextString(m) }
func (*CReqLeftClick) ProtoMessage()               {}
func (*CReqLeftClick) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *CReqLeftClick) GetX() uint32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *CReqLeftClick) GetY() uint32 {
	if m != nil {
		return m.Y
	}
	return 0
}

// 返回玩家数据
type CRespLeftClick struct {
	ErrCode uint32 `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	X       uint32 `protobuf:"varint,3,opt,name=x" json:"x,omitempty"`
	Y       uint32 `protobuf:"varint,4,opt,name=y" json:"y,omitempty"`
}

func (m *CRespLeftClick) Reset()                    { *m = CRespLeftClick{} }
func (m *CRespLeftClick) String() string            { return proto.CompactTextString(m) }
func (*CRespLeftClick) ProtoMessage()               {}
func (*CRespLeftClick) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CRespLeftClick) GetErrCode() uint32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CRespLeftClick) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *CRespLeftClick) GetX() uint32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *CRespLeftClick) GetY() uint32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func init() {
	proto.RegisterType((*CReqSyncSystemTime)(nil), "cmsg.CReqSyncSystemTime")
	proto.RegisterType((*CRespSyncSystemTime)(nil), "cmsg.CRespSyncSystemTime")
	proto.RegisterType((*CReqAuth)(nil), "cmsg.CReqAuth")
	proto.RegisterType((*CRespAuth)(nil), "cmsg.CRespAuth")
	proto.RegisterType((*CNotifyLoginInfo)(nil), "cmsg.CNotifyLoginInfo")
	proto.RegisterType((*CReqLogin)(nil), "cmsg.CReqLogin")
	proto.RegisterType((*CRespLogin)(nil), "cmsg.CRespLogin")
	proto.RegisterType((*CReqLogout)(nil), "cmsg.CReqLogout")
	proto.RegisterType((*CRespLogout)(nil), "cmsg.CRespLogout")
	proto.RegisterType((*CNotifyLogout)(nil), "cmsg.CNotifyLogout")
	proto.RegisterType((*CReqNotifyUserData)(nil), "cmsg.CReqNotifyUserData")
	proto.RegisterType((*CRespNotifyUserData)(nil), "cmsg.CRespNotifyUserData")
	proto.RegisterType((*CReqLeftClick)(nil), "cmsg.CReqLeftClick")
	proto.RegisterType((*CRespLeftClick)(nil), "cmsg.CRespLeftClick")
}

func init() { proto.RegisterFile("cmsg/client_msg.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 531 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x51, 0x6b, 0x13, 0x41,
	0x10, 0xe6, 0x92, 0x6b, 0x4c, 0x26, 0x4d, 0x95, 0x55, 0xcb, 0x59, 0x44, 0xe2, 0x3e, 0x05, 0x84,
	0x9c, 0xc6, 0x07, 0x29, 0x08, 0x12, 0x52, 0x91, 0x42, 0xf5, 0x61, 0x5b, 0x1f, 0xb5, 0x5c, 0x2f,
	0x93, 0xeb, 0xd2, 0xdc, 0xed, 0x65, 0x77, 0xcf, 0x26, 0xbf, 0xc5, 0x47, 0xff, 0xa8, 0xec, 0xdc,
	0xe5, 0x92, 0x88, 0x08, 0xf1, 0x29, 0x3b, 0x5f, 0x66, 0xbe, 0xf9, 0xbe, 0x6f, 0xd9, 0x83, 0xa7,
	0x71, 0x6a, 0x92, 0x30, 0x9e, 0x4b, 0xcc, 0xec, 0x75, 0x6a, 0x92, 0x61, 0xae, 0x95, 0x55, 0xcc,
	0x77, 0xf0, 0xc9, 0x45, 0x22, 0xed, 0x6d, 0x71, 0x33, 0x8c, 0x55, 0x1a, 0xde, 0x63, 0xb6, 0x94,
	0xc5, 0xe8, 0xcd, 0xe9, 0x69, 0x98, 0x44, 0x29, 0x1a, 0xd4, 0x3f, 0x50, 0x87, 0x46, 0xc7, 0x61,
	0x75, 0x74, 0x28, 0x0d, 0xd3, 0x69, 0x8a, 0x33, 0xfa, 0xbd, 0x9e, 0xe2, 0xac, 0xe4, 0xe4, 0x23,
	0x60, 0x13, 0x81, 0x8b, 0xcb, 0x55, 0x16, 0x5f, 0xae, 0x8c, 0xc5, 0xf4, 0x4a, 0xa6, 0xc8, 0x9e,
	0x43, 0xc7, 0xca, 0x14, 0x8d, 0x8d, 0xd2, 0x3c, 0xf0, 0xfa, 0xde, 0xa0, 0x29, 0x36, 0x00, 0xff,
	0x06, 0x8f, 0x27, 0x02, 0x4d, 0xbe, 0xcf, 0x10, 0x1b, 0xc0, 0xc3, 0x52, 0xd3, 0x55, 0xdd, 0xd3,
	0xa0, 0x9e, 0x3f, 0x61, 0xbe, 0x80, 0xb6, 0x93, 0x34, 0x2e, 0xec, 0x2d, 0x0b, 0xe0, 0x41, 0x14,
	0xc7, 0xaa, 0xc8, 0x2c, 0x31, 0x76, 0xc4, 0xba, 0x64, 0x27, 0xd0, 0xce, 0x23, 0x63, 0xee, 0x95,
	0x9e, 0x12, 0x51, 0x47, 0xd4, 0x35, 0x0b, 0xe1, 0x00, 0x97, 0x56, 0x47, 0x41, 0xb3, 0xef, 0x0d,
	0xba, 0xa3, 0x67, 0xc3, 0xca, 0xfc, 0xf0, 0xa3, 0x43, 0xc7, 0x25, 0xc3, 0x79, 0x36, 0x53, 0xa2,
	0xec, 0xe3, 0xbf, 0x3c, 0xe8, 0x90, 0xa5, 0xf5, 0x52, 0xd4, 0x7a, 0xa2, 0xa6, 0x48, 0x4b, 0x7b,
	0x62, 0x5d, 0xb2, 0x63, 0x68, 0xa1, 0xd6, 0x9f, 0x4d, 0x52, 0xad, 0xac, 0xaa, 0x6d, 0x99, 0xcd,
	0x5d, 0x99, 0xc7, 0xd0, 0x2a, 0x0c, 0xea, 0xf3, 0xb3, 0xc0, 0xef, 0x7b, 0x03, 0x5f, 0x54, 0x15,
	0x63, 0xe0, 0x1b, 0x99, 0x64, 0xc1, 0x01, 0xb5, 0xd3, 0x99, 0xbd, 0x00, 0x28, 0xb2, 0xb9, 0x8a,
	0xef, 0x5c, 0x16, 0x41, 0x8b, 0xd2, 0xd9, 0x42, 0xf8, 0x7b, 0x78, 0x34, 0xf9, 0xa2, 0xac, 0x9c,
	0xad, 0x2e, 0x54, 0x22, 0x33, 0x67, 0xe0, 0x1f, 0x01, 0x1d, 0x41, 0x43, 0xe6, 0x95, 0xce, 0x86,
	0xcc, 0xf9, 0x3b, 0xb2, 0xb8, 0xa0, 0xd1, 0x2d, 0x59, 0xde, 0x5f, 0x65, 0x35, 0x36, 0xb2, 0xf8,
	0x4f, 0x0f, 0x80, 0xc2, 0x29, 0x47, 0xf7, 0x4f, 0x67, 0xb3, 0xac, 0xb9, 0xb3, 0xec, 0x25, 0xf8,
	0xee, 0x44, 0xc9, 0x74, 0x47, 0xbd, 0xfa, 0x96, 0xbe, 0x1a, 0xd4, 0x82, 0xfe, 0x62, 0x7d, 0xe8,
	0x4a, 0x23, 0x30, 0x56, 0x59, 0x86, 0xb1, 0xa5, 0xb4, 0xda, 0x62, 0x1b, 0xe2, 0x87, 0x24, 0xce,
	0xd9, 0x52, 0x85, 0xe5, 0x1f, 0xa0, 0xbb, 0x96, 0xaa, 0x0a, 0xbb, 0xbf, 0x56, 0x3e, 0x86, 0xde,
	0x26, 0x63, 0x47, 0xf1, 0x1a, 0x3a, 0xf3, 0x75, 0xda, 0x44, 0xd2, 0x1d, 0xb1, 0x5a, 0x69, 0x7d,
	0x0f, 0x62, 0xd3, 0xc4, 0x9f, 0x94, 0x4f, 0xaa, 0x64, 0x71, 0x5e, 0xce, 0x22, 0x1b, 0xf1, 0x4f,
	0xd5, 0xa3, 0xd9, 0x85, 0xff, 0x43, 0xe1, 0x2b, 0xe8, 0x91, 0x61, 0x9c, 0xd9, 0xc9, 0x5c, 0xc6,
	0x77, 0xec, 0x10, 0xbc, 0x65, 0x35, 0xec, 0x2d, 0x5d, 0xb5, 0xa2, 0x89, 0x9e, 0xf0, 0x56, 0xfc,
	0x3b, 0x1c, 0x95, 0x79, 0xd4, 0xdd, 0xfb, 0x5f, 0x1f, 0xf1, 0x37, 0x77, 0xf8, 0xfd, 0x8a, 0xff,
	0xa6, 0x45, 0x5f, 0x91, 0xb7, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xef, 0x2c, 0xb3, 0xc7, 0xb2,
	0x04, 0x00, 0x00,
}
